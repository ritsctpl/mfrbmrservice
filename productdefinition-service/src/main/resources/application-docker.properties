spring.data.mongodb.uri=mongodb://admin:Rits%40123@mongo:27017/productdefinition-service?authSource=admin
spring.application.name=productdefinition-service
server.port=0
eureka.client.serviceUrl.defaultZone=http://eureka:password@discovery-server:8761/eureka
spring.zipkin.base-url=http://zipkin:9411
spring.sleuth.sampler.probability= 1.0

management.health.circuitbreakers.enabled=true
#management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Actuator Prometheus Endpoint
management.endpoints.web.exposure.include= prometheus

spring.main.allow-circular-references=true
spring.main.circular-dependency-strategy=destroy


# PostgreSQL Database Configuration using environment variables

spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5433}/${POSTGRES_DB:production-services}
spring.datasource.username=${POSTGRES_USER:postgres}
spring.datasource.password=${POSTGRES_PASSWORD:Rits@123}
#spring.datasource.url=jdbc:postgresql://192.168.0.151:5432/mydatabase
#spring.datasource.username=postgres
#spring.datasource.password=psql@123
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql=true
spring.main.allow-bean-definition-overriding=true

spring.jpa.properties.hibernate.format_sql=true

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Hibernate/JPA settings (if applicable)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

resource.type.uri=http://productdefinition-service/app/v1/resourcetype-service
operation.type.uri=http://productdefinition-service/app/v1/operation-service
extension-service.url=http://core-service/app/v1/extension-service

listmaintenance-service.url=http://production-service/app/v1/listmaintenance-service
pcurouterheader-service.uri=http://production-service/app/v1/pcurouterheader-service
integration-service.uri=http://integration-service/app/v1/integration-service
resource-service.url=http://productdefinition-service/app/v1/resource-service
toolgroup-service.url=http://productdefinition-service/app/v1/toolgroup-service
toolnumber-service.url=http://productdefinition-service/app/v1/toolnumber-service
pcuinwork.url=http://production-service/app/v1/start-service
bom-service.url=http://product-service/app/v1/bom-service

livedata.url=http://production-service/app/v1/pcuinqueue-service
dccollect-service.url=http://production-service/app/v1/dccollect-service
productionlog-service.url=http://production-service/app/v1/productionlog-service
certification.url=http://qualitydefinition-service/app/v1/certificate-service
pod-service.url=http://core-service/app/v1/pod-service
shift-service.url=http://productdefinition-service/app/v1/shift-service
workcenter-service.url=http://productdefinition-service/app/v1/workcenter-service

activity-service.url=http://core-service/app/v1/activity-service
cycletime-service.url=http://core-service/app/v1/cycletime-service
downtime-service.url=http://oee-process-service/app/v1/downtime-service



# Kafka Producer Properties
spring.kafka.producer.bootstrap-servers=${DOCKER_KAFKA_HOST:broker}:${DOCKER_KAFKA_PORT:9092}
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=com.example.PojoSerializer
spring.kafka.consumer.bootstrap-servers=${DOCKER_KAFKA_HOST:broker}:${DOCKER_KAFKA_PORT:9092}
spring.kafka.consumer.group-id=log-group
spring.kafka.consumer.auto-offset-reset=earliest

auditlog-service.url=http://core-service/app/v1/auditlog-service


